@page
@model Helsinki_City_Bike_App.Pages.Stations.IndexModel

@{
    ViewData["Title"] = "Stations";
}

<h1>Stations</h1>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <input type="text" name="SearchString" placeholder="Find by Station Name" value="@Model.CurrentFilter" />
        <input type="submit" value="Filter" class="btn btn-primary" />
        <a asp-page="./Index" class="btn btn-primary">Clear Filters</a>
        <a asp-page="Create" class="btn btn-success">Create New</a>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Stations[0].Name)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.AddressSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Stations[0].Address)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.CapacitySort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Stations[0].Capacity)
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Stations)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.StationID" class="btn btn-primary">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Stations.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Stations.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Stations.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Stations.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>