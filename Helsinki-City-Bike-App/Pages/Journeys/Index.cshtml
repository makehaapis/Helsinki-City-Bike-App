@page
@model Helsinki_City_Bike_App.Pages.Journeys.IndexModel

@{
    ViewData["Title"] = "Journeys";
}

<h1>Journeys</h1>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <input type="text" name="SearchString" placeholder="Find by Station Name" value="@Model.CurrentFilter" />
        <input type="submit" value="Filter" class="btn btn-primary" />
        <a asp-page="./Index" class="btn btn-primary">Clear Filters</a>
        <a asp-page="Create" class="btn btn-success">Create New</a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DepartureTimeSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Journeys[0].DepartureTime)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ReturnTimeSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Journeys[0].ReturnTime)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DistanceSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Journeys[0].Distance)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DistanceSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Journeys[0].Duration)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DepartureStationSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    Departure Station
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ReturnStationSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    Return Station
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Journeys)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DepartureTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReturnTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Distance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DepartureStation.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReturnStation.Name)
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.JourneyID" class="btn btn-primary">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Journeys.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Journeys.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Journeys.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Journeys.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
